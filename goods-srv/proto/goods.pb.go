// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: goods.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GoodsPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceMin    int32  `protobuf:"varint,1,opt,name=priceMin,proto3" json:"priceMin,omitempty"`
	PriceMax    int32  `protobuf:"varint,2,opt,name=priceMax,proto3" json:"priceMax,omitempty"`
	IsHot       bool   `protobuf:"varint,3,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsNew       bool   `protobuf:"varint,4,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsTab       bool   `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
	TopCategory int32  `protobuf:"varint,6,opt,name=topCategory,proto3" json:"topCategory,omitempty"`
	KeyWords    string `protobuf:"bytes,7,opt,name=keyWords,proto3" json:"keyWords,omitempty"`
	Brand       int32  `protobuf:"varint,8,opt,name=brand,proto3" json:"brand,omitempty"`
	Pages       int32  `protobuf:"varint,9,opt,name=pages,proto3" json:"pages,omitempty"`
	PageSize    int32  `protobuf:"varint,10,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GoodsPageReq) Reset() {
	*x = GoodsPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsPageReq) ProtoMessage() {}

func (x *GoodsPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsPageReq.ProtoReflect.Descriptor instead.
func (*GoodsPageReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{0}
}

func (x *GoodsPageReq) GetPriceMin() int32 {
	if x != nil {
		return x.PriceMin
	}
	return 0
}

func (x *GoodsPageReq) GetPriceMax() int32 {
	if x != nil {
		return x.PriceMax
	}
	return 0
}

func (x *GoodsPageReq) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsPageReq) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsPageReq) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

func (x *GoodsPageReq) GetTopCategory() int32 {
	if x != nil {
		return x.TopCategory
	}
	return 0
}

func (x *GoodsPageReq) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *GoodsPageReq) GetBrand() int32 {
	if x != nil {
		return x.Brand
	}
	return 0
}

func (x *GoodsPageReq) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *GoodsPageReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GoodsIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GoodsIdsReq) Reset() {
	*x = GoodsIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsIdsReq) ProtoMessage() {}

func (x *GoodsIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsIdsReq.ProtoReflect.Descriptor instead.
func (*GoodsIdsReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsIdsReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type CreateGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn         string   `protobuf:"bytes,3,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	Stocks          int32    `protobuf:"varint,4,opt,name=stocks,proto3" json:"stocks,omitempty"` //库存
	OriginPrice     float32  `protobuf:"fixed32,5,opt,name=originPrice,proto3" json:"originPrice,omitempty"`
	SalePrice       float32  `protobuf:"fixed32,6,opt,name=salePrice,proto3" json:"salePrice,omitempty"`
	GoodsDesc       string   `protobuf:"bytes,7,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree        bool     `protobuf:"varint,8,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	GoodsImages     []string `protobuf:"bytes,9,rep,name=goodsImages,proto3" json:"goodsImages,omitempty"`
	GoodsDesImages  []string `protobuf:"bytes,10,rep,name=goodsDesImages,proto3" json:"goodsDesImages,omitempty"`
	GoodsFrontImage string   `protobuf:"bytes,11,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew           bool     `protobuf:"varint,12,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot           bool     `protobuf:"varint,13,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale          bool     `protobuf:"varint,14,opt,name=onSale,proto3" json:"onSale,omitempty"`
	CategoryID      int32    `protobuf:"varint,15,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	BrandID         int32    `protobuf:"varint,16,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *CreateGoodsReq) Reset() {
	*x = CreateGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsReq) ProtoMessage() {}

func (x *CreateGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsReq.ProtoReflect.Descriptor instead.
func (*CreateGoodsReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGoodsReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateGoodsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGoodsReq) GetGoodsSn() string {
	if x != nil {
		return x.GoodsSn
	}
	return ""
}

func (x *CreateGoodsReq) GetStocks() int32 {
	if x != nil {
		return x.Stocks
	}
	return 0
}

func (x *CreateGoodsReq) GetOriginPrice() float32 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *CreateGoodsReq) GetSalePrice() float32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

func (x *CreateGoodsReq) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *CreateGoodsReq) GetShipFree() bool {
	if x != nil {
		return x.ShipFree
	}
	return false
}

func (x *CreateGoodsReq) GetGoodsImages() []string {
	if x != nil {
		return x.GoodsImages
	}
	return nil
}

func (x *CreateGoodsReq) GetGoodsDesImages() []string {
	if x != nil {
		return x.GoodsDesImages
	}
	return nil
}

func (x *CreateGoodsReq) GetGoodsFrontImage() string {
	if x != nil {
		return x.GoodsFrontImage
	}
	return ""
}

func (x *CreateGoodsReq) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *CreateGoodsReq) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *CreateGoodsReq) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *CreateGoodsReq) GetCategoryID() int32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CreateGoodsReq) GetBrandID() int32 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type DeleteGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGoodsReq) Reset() {
	*x = DeleteGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGoodsReq) ProtoMessage() {}

func (x *DeleteGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGoodsReq.ProtoReflect.Descriptor instead.
func (*DeleteGoodsReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteGoodsReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GoodsReq) Reset() {
	*x = GoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsReq) ProtoMessage() {}

func (x *GoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsReq.ProtoReflect.Descriptor instead.
func (*GoodsReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{4}
}

func (x *GoodsReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *SubCategoryReq) Reset() {
	*x = SubCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategoryReq) ProtoMessage() {}

func (x *SubCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategoryReq.ProtoReflect.Descriptor instead.
func (*SubCategoryReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{5}
}

func (x *SubCategoryReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubCategoryReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type CategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level            int32  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	IsTab            bool   `protobuf:"varint,4,opt,name=isTab,proto3" json:"isTab,omitempty"`
	ParentCategoryId int32  `protobuf:"varint,5,opt,name=parentCategoryId,proto3" json:"parentCategoryId,omitempty"`
}

func (x *CategoryReq) Reset() {
	*x = CategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryReq) ProtoMessage() {}

func (x *CategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryReq.ProtoReflect.Descriptor instead.
func (*CategoryReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{6}
}

func (x *CategoryReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CategoryReq) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

func (x *CategoryReq) GetParentCategoryId() int32 {
	if x != nil {
		return x.ParentCategoryId
	}
	return 0
}

type DeleteCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCategoryReq) Reset() {
	*x = DeleteCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryReq) ProtoMessage() {}

func (x *DeleteCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryReq.ProtoReflect.Descriptor instead.
func (*DeleteCategoryReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCategoryReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BrandPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages    int32 `protobuf:"varint,1,opt,name=pages,proto3" json:"pages,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *BrandPageReq) Reset() {
	*x = BrandPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandPageReq) ProtoMessage() {}

func (x *BrandPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandPageReq.ProtoReflect.Descriptor instead.
func (*BrandPageReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{8}
}

func (x *BrandPageReq) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *BrandPageReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BrandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandReq) Reset() {
	*x = BrandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandReq) ProtoMessage() {}

func (x *BrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandReq.ProtoReflect.Descriptor instead.
func (*BrandReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{9}
}

func (x *BrandReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandReq) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type BannerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Order int32  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *BannerReq) Reset() {
	*x = BannerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerReq) ProtoMessage() {}

func (x *BannerReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerReq.ProtoReflect.Descriptor instead.
func (*BannerReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{10}
}

func (x *BannerReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BannerReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BannerReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type GoodsListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*GoodsRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoodsListRes) Reset() {
	*x = GoodsListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListRes) ProtoMessage() {}

func (x *GoodsListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListRes.ProtoReflect.Descriptor instead.
func (*GoodsListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{11}
}

func (x *GoodsListRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GoodsListRes) GetData() []*GoodsRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type GoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryID      int32             `protobuf:"varint,2,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	Name            string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn         string            `protobuf:"bytes,4,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	SaleNum         int32             `protobuf:"varint,5,opt,name=saleNum,proto3" json:"saleNum,omitempty"`
	ClickNum        int32             `protobuf:"varint,6,opt,name=clickNum,proto3" json:"clickNum,omitempty"`
	FavNum          int32             `protobuf:"varint,7,opt,name=FavNum,proto3" json:"FavNum,omitempty"`
	OriginPrice     float32           `protobuf:"fixed32,8,opt,name=originPrice,proto3" json:"originPrice,omitempty"`
	SalePrice       float32           `protobuf:"fixed32,9,opt,name=salePrice,proto3" json:"salePrice,omitempty"`
	GoodsDesc       string            `protobuf:"bytes,10,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree        bool              `protobuf:"varint,11,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	GoodsImages     []string          `protobuf:"bytes,12,rep,name=goodsImages,proto3" json:"goodsImages,omitempty"`
	GoodsDesImages  []string          `protobuf:"bytes,13,rep,name=goodsDesImages,proto3" json:"goodsDesImages,omitempty"`
	GoodsFrontImage string            `protobuf:"bytes,14,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew           bool              `protobuf:"varint,15,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot           bool              `protobuf:"varint,16,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale          bool              `protobuf:"varint,17,opt,name=onSale,proto3" json:"onSale,omitempty"`
	CreateTime      int64             `protobuf:"varint,18,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Category        *CategoryBriefRes `protobuf:"bytes,19,opt,name=category,proto3" json:"category,omitempty"`
	Brand           *BrandRes         `protobuf:"bytes,20,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *GoodsRes) Reset() {
	*x = GoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsRes) ProtoMessage() {}

func (x *GoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsRes.ProtoReflect.Descriptor instead.
func (*GoodsRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{12}
}

func (x *GoodsRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsRes) GetCategoryID() int32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *GoodsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsRes) GetGoodsSn() string {
	if x != nil {
		return x.GoodsSn
	}
	return ""
}

func (x *GoodsRes) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

func (x *GoodsRes) GetClickNum() int32 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *GoodsRes) GetFavNum() int32 {
	if x != nil {
		return x.FavNum
	}
	return 0
}

func (x *GoodsRes) GetOriginPrice() float32 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *GoodsRes) GetSalePrice() float32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

func (x *GoodsRes) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *GoodsRes) GetShipFree() bool {
	if x != nil {
		return x.ShipFree
	}
	return false
}

func (x *GoodsRes) GetGoodsImages() []string {
	if x != nil {
		return x.GoodsImages
	}
	return nil
}

func (x *GoodsRes) GetGoodsDesImages() []string {
	if x != nil {
		return x.GoodsDesImages
	}
	return nil
}

func (x *GoodsRes) GetGoodsFrontImage() string {
	if x != nil {
		return x.GoodsFrontImage
	}
	return ""
}

func (x *GoodsRes) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsRes) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsRes) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *GoodsRes) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GoodsRes) GetCategory() *CategoryBriefRes {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *GoodsRes) GetBrand() *BrandRes {
	if x != nil {
		return x.Brand
	}
	return nil
}

type CategoryBriefRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CategoryBriefRes) Reset() {
	*x = CategoryBriefRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryBriefRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryBriefRes) ProtoMessage() {}

func (x *CategoryBriefRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryBriefRes.ProtoReflect.Descriptor instead.
func (*CategoryBriefRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{13}
}

func (x *CategoryBriefRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryBriefRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CategoryListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data     []*CategoryRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	JsonData string         `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *CategoryListRes) Reset() {
	*x = CategoryListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListRes) ProtoMessage() {}

func (x *CategoryListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListRes.ProtoReflect.Descriptor instead.
func (*CategoryListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{14}
}

func (x *CategoryListRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CategoryListRes) GetData() []*CategoryRes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CategoryListRes) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type SubCategoryListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total           int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Category        *CategoryRes   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	SubCategoryList []*CategoryRes `protobuf:"bytes,3,rep,name=subCategoryList,proto3" json:"subCategoryList,omitempty"`
}

func (x *SubCategoryListRes) Reset() {
	*x = SubCategoryListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubCategoryListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategoryListRes) ProtoMessage() {}

func (x *SubCategoryListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategoryListRes.ProtoReflect.Descriptor instead.
func (*SubCategoryListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{15}
}

func (x *SubCategoryListRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubCategoryListRes) GetCategory() *CategoryRes {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *SubCategoryListRes) GetSubCategoryList() []*CategoryRes {
	if x != nil {
		return x.SubCategoryList
	}
	return nil
}

type CategoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level          int32  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	IsTab          bool   `protobuf:"varint,4,opt,name=isTab,proto3" json:"isTab,omitempty"`
	ParentCategory int32  `protobuf:"varint,5,opt,name=parentCategory,proto3" json:"parentCategory,omitempty"`
}

func (x *CategoryRes) Reset() {
	*x = CategoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryRes) ProtoMessage() {}

func (x *CategoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryRes.ProtoReflect.Descriptor instead.
func (*CategoryRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{16}
}

func (x *CategoryRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryRes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CategoryRes) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

func (x *CategoryRes) GetParentCategory() int32 {
	if x != nil {
		return x.ParentCategory
	}
	return 0
}

type BrandListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*BrandRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BrandListRes) Reset() {
	*x = BrandListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListRes) ProtoMessage() {}

func (x *BrandListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListRes.ProtoReflect.Descriptor instead.
func (*BrandListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{17}
}

func (x *BrandListRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BrandListRes) GetData() []*BrandRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type BrandRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandRes) Reset() {
	*x = BrandRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandRes) ProtoMessage() {}

func (x *BrandRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandRes.ProtoReflect.Descriptor instead.
func (*BrandRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{18}
}

func (x *BrandRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandRes) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type BannerListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*BannerRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BannerListRes) Reset() {
	*x = BannerListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerListRes) ProtoMessage() {}

func (x *BannerListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerListRes.ProtoReflect.Descriptor instead.
func (*BannerListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{19}
}

func (x *BannerListRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BannerListRes) GetData() []*BannerRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type BannerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Order int32  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *BannerRes) Reset() {
	*x = BannerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerRes) ProtoMessage() {}

func (x *BannerRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerRes.ProtoReflect.Descriptor instead.
func (*BannerRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{20}
}

func (x *BannerRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerRes) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BannerRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BannerRes) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

var File_goods_proto protoreflect.FileDescriptor

var file_goods_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x48, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x1f, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0xd2, 0x03, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x53, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68,
	0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68,
	0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x08, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x89,
	0x01, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x40, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x42, 0x0a, 0x08, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x59, 0x0a, 0x09, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x49, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe4, 0x04, 0x0a, 0x08,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x46, 0x61,
	0x76, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73,
	0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65,
	0x73, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x22, 0x36, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x0f, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x54, 0x61, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54,
	0x61, 0x62, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x49, 0x0a, 0x0c, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x08, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x4b, 0x0a, 0x0d, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x09, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x32, 0xec, 0x08, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x12, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goods_proto_rawDescOnce sync.Once
	file_goods_proto_rawDescData = file_goods_proto_rawDesc
)

func file_goods_proto_rawDescGZIP() []byte {
	file_goods_proto_rawDescOnce.Do(func() {
		file_goods_proto_rawDescData = protoimpl.X.CompressGZIP(file_goods_proto_rawDescData)
	})
	return file_goods_proto_rawDescData
}

var file_goods_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_goods_proto_goTypes = []interface{}{
	(*GoodsPageReq)(nil),       // 0: proto.GoodsPageReq
	(*GoodsIdsReq)(nil),        // 1: proto.GoodsIdsReq
	(*CreateGoodsReq)(nil),     // 2: proto.CreateGoodsReq
	(*DeleteGoodsReq)(nil),     // 3: proto.DeleteGoodsReq
	(*GoodsReq)(nil),           // 4: proto.GoodsReq
	(*SubCategoryReq)(nil),     // 5: proto.SubCategoryReq
	(*CategoryReq)(nil),        // 6: proto.CategoryReq
	(*DeleteCategoryReq)(nil),  // 7: proto.DeleteCategoryReq
	(*BrandPageReq)(nil),       // 8: proto.BrandPageReq
	(*BrandReq)(nil),           // 9: proto.BrandReq
	(*BannerReq)(nil),          // 10: proto.BannerReq
	(*GoodsListRes)(nil),       // 11: proto.GoodsListRes
	(*GoodsRes)(nil),           // 12: proto.GoodsRes
	(*CategoryBriefRes)(nil),   // 13: proto.CategoryBriefRes
	(*CategoryListRes)(nil),    // 14: proto.CategoryListRes
	(*SubCategoryListRes)(nil), // 15: proto.SubCategoryListRes
	(*CategoryRes)(nil),        // 16: proto.CategoryRes
	(*BrandListRes)(nil),       // 17: proto.BrandListRes
	(*BrandRes)(nil),           // 18: proto.BrandRes
	(*BannerListRes)(nil),      // 19: proto.BannerListRes
	(*BannerRes)(nil),          // 20: proto.BannerRes
	(*emptypb.Empty)(nil),      // 21: google.protobuf.Empty
}
var file_goods_proto_depIdxs = []int32{
	12, // 0: proto.GoodsListRes.data:type_name -> proto.GoodsRes
	13, // 1: proto.GoodsRes.category:type_name -> proto.CategoryBriefRes
	18, // 2: proto.GoodsRes.brand:type_name -> proto.BrandRes
	16, // 3: proto.CategoryListRes.data:type_name -> proto.CategoryRes
	16, // 4: proto.SubCategoryListRes.category:type_name -> proto.CategoryRes
	16, // 5: proto.SubCategoryListRes.subCategoryList:type_name -> proto.CategoryRes
	18, // 6: proto.BrandListRes.data:type_name -> proto.BrandRes
	20, // 7: proto.BannerListRes.data:type_name -> proto.BannerRes
	0,  // 8: proto.Goods.GetGoodsPage:input_type -> proto.GoodsPageReq
	1,  // 9: proto.Goods.GetGoodsListByIds:input_type -> proto.GoodsIdsReq
	2,  // 10: proto.Goods.CreateGoods:input_type -> proto.CreateGoodsReq
	3,  // 11: proto.Goods.DeleteGoods:input_type -> proto.DeleteGoodsReq
	2,  // 12: proto.Goods.UpdateGoods:input_type -> proto.CreateGoodsReq
	4,  // 13: proto.Goods.GetGoods:input_type -> proto.GoodsReq
	21, // 14: proto.Goods.GetAllCategoryList:input_type -> google.protobuf.Empty
	5,  // 15: proto.Goods.GetSubCategoryList:input_type -> proto.SubCategoryReq
	6,  // 16: proto.Goods.CreateCategory:input_type -> proto.CategoryReq
	6,  // 17: proto.Goods.UpdateCategory:input_type -> proto.CategoryReq
	7,  // 18: proto.Goods.DeleteCategory:input_type -> proto.DeleteCategoryReq
	8,  // 19: proto.Goods.GetBrandPage:input_type -> proto.BrandPageReq
	9,  // 20: proto.Goods.CreateBrand:input_type -> proto.BrandReq
	9,  // 21: proto.Goods.UpdateBrand:input_type -> proto.BrandReq
	9,  // 22: proto.Goods.DeleteBrand:input_type -> proto.BrandReq
	21, // 23: proto.Goods.GetBannerList:input_type -> google.protobuf.Empty
	10, // 24: proto.Goods.CreateBanner:input_type -> proto.BannerReq
	10, // 25: proto.Goods.UpdateBanner:input_type -> proto.BannerReq
	10, // 26: proto.Goods.DeleteBanner:input_type -> proto.BannerReq
	11, // 27: proto.Goods.GetGoodsPage:output_type -> proto.GoodsListRes
	11, // 28: proto.Goods.GetGoodsListByIds:output_type -> proto.GoodsListRes
	12, // 29: proto.Goods.CreateGoods:output_type -> proto.GoodsRes
	21, // 30: proto.Goods.DeleteGoods:output_type -> google.protobuf.Empty
	21, // 31: proto.Goods.UpdateGoods:output_type -> google.protobuf.Empty
	12, // 32: proto.Goods.GetGoods:output_type -> proto.GoodsRes
	14, // 33: proto.Goods.GetAllCategoryList:output_type -> proto.CategoryListRes
	15, // 34: proto.Goods.GetSubCategoryList:output_type -> proto.SubCategoryListRes
	16, // 35: proto.Goods.CreateCategory:output_type -> proto.CategoryRes
	21, // 36: proto.Goods.UpdateCategory:output_type -> google.protobuf.Empty
	21, // 37: proto.Goods.DeleteCategory:output_type -> google.protobuf.Empty
	17, // 38: proto.Goods.GetBrandPage:output_type -> proto.BrandListRes
	18, // 39: proto.Goods.CreateBrand:output_type -> proto.BrandRes
	21, // 40: proto.Goods.UpdateBrand:output_type -> google.protobuf.Empty
	21, // 41: proto.Goods.DeleteBrand:output_type -> google.protobuf.Empty
	19, // 42: proto.Goods.GetBannerList:output_type -> proto.BannerListRes
	20, // 43: proto.Goods.CreateBanner:output_type -> proto.BannerRes
	21, // 44: proto.Goods.UpdateBanner:output_type -> google.protobuf.Empty
	21, // 45: proto.Goods.DeleteBanner:output_type -> google.protobuf.Empty
	27, // [27:46] is the sub-list for method output_type
	8,  // [8:27] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_goods_proto_init() }
func file_goods_proto_init() {
	if File_goods_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryBriefRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubCategoryListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goods_proto_goTypes,
		DependencyIndexes: file_goods_proto_depIdxs,
		MessageInfos:      file_goods_proto_msgTypes,
	}.Build()
	File_goods_proto = out.File
	file_goods_proto_rawDesc = nil
	file_goods_proto_goTypes = nil
	file_goods_proto_depIdxs = nil
}
